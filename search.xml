<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[如何上传框架到cocoapods]]></title>
    <url>%2F2018%2F12%2F07%2F%E5%A6%82%E4%BD%95%E4%B8%8A%E4%BC%A0%E6%A1%86%E6%9E%B6%E5%88%B0cocoapods%2F</url>
    <content type="text"><![CDATA[此文章默认您已安装cocoapods 1、先去github创建一个项目，格式如下 2、git clone https://github.com/caoyunxiao/YXProgressHUDView “https://github.com/caoyunxiao/YXProgressHUDView”换成自己的项目地址 3、把需要上传的框架加入工程，并push到github,并为此次提交打上tag，此tag和下文中podspec文件里source tag 必须一样 git tag ‘1.0.0’ git push –tags 4、创建podspec文件 pod spec create YXProgressHUDView 5、修改podspec文件 Pod::Spec.new do |s| s.name = “YXProgressHUDView” s.version = “1.0.0” s.summary = “An iOS activity indicator view.” s.description = &lt;&lt;-DESC YXProgressHUDView 基于MBProgressHUD的在封装，只为使用更简单 DESC s.homepage = “https://github.com/caoyunxiao/YXProgressHUDView&quot; s.license = { :type =&gt; ‘MIT’, :file =&gt; ‘LICENSE’ } s.author = { ‘Matej caoyunxiao’ =&gt; &#39;chinacgcgcg@163.com‘ } s.source = { :git =&gt; “https://github.com/caoyunxiao/YXProgressHUDView.git&quot;, :tag =&gt; “1.0.0” } s.ios.deployment_target = ‘8.0’ s.tvos.deployment_target = ‘9.0’ s.source_files = “YXProgressHUDView/*.{h,m}” s.requires_arc = true s.dependency “MBProgressHUD”, “~&gt; 1.0.0” s.resources = “YXProgressHUDView/Resources/*.png” end 6、注册cocoapods账号 pod trunk register 邮箱地址 ‘用户名’ –description=’描述信息’ 输入如下命令可查看个人cocoapods账号信息，检查是否注册成功 pod trunk me 7、pod spec lint（检查podspec文件格式是否正确）后面加–verbose可打印详细信息 出现下图时才表示正确无误 8、上传到Cocoapods服务器 pod trunk push YXProgressHUDView.podspec出现下图就表示上传成功 9、更新本地pod依赖库 pod setup 10、使用 pod search YXProgressHUDView,如果搜索不到没关系 直接在podfile文件里使用，如果能成功使用说明没问题。 pod search 解决办法 pod setup成功后会生成~/Library/Caches/CocoaPods/search_index.json文件。 终端输入rm ~/Library/Caches/CocoaPods/search_index.json 删除成功后再执行pod search]]></content>
  </entry>
  <entry>
    <title><![CDATA[使用YXAlertController]]></title>
    <url>%2F2018%2F12%2F07%2F%E4%BD%BF%E7%94%A8YXAlertController%2F</url>
    <content type="text"><![CDATA[YXAlertController是基于系统系统自带UIAlertController封装的一个库，由于在项目中经常会用到，就简单封装了一下，支持Pods是为了以后别的项目使用更方便。1pod 'YXAlertController', '~&gt; 1.0.3' 主要有以下两个方法可供调用：1234567891011121314151617181920212223/** 默认提示选择框 @param title 提示标题 @param message 提示说明 @param style 风格 @param completed 确定回调 @param canceled 取消回调 */extern void ShowDefaultAlertView(NSString *title,NSString *message,UIAlertControllerStyle style,void(^completed)(),void(^canceled)());/** 提示选择框 @param title 提示标题 @param message 提示说明 @param cancelTitle 取消按钮 @param DefaultTitle 确认按钮 @param style 风格 @param completed 确定回调 @param canceled 取消回调 */extern void ShowAlertView(NSString *title,NSString *message,NSString *cancelTitle,NSString *DefaultTitle,UIAlertControllerStyle style,void(^completed)(),void(^canceled)()); 如何调用:123456789#import "YXAlertController.h" ShowDefaultAlertView(@"提示", @"你好，欢迎使用YXAlertController", UIAlertControllerStyleAlert, nil, nil); ShowAlertView(@"提示", @"你好，欢迎使用YXAlertController", @"取消", @"确认", UIAlertControllerStyleAlert, ^&#123; &#125;, ^&#123; &#125;);]]></content>
  </entry>
  <entry>
    <title><![CDATA[iOS企业版App如何更新]]></title>
    <url>%2F2018%2F12%2F07%2Fasdasdasd%2F</url>
    <content type="text"><![CDATA[iOS企业版本更新很方便，一般的套路是服务端提供一个接口，App再启动时判断是否有新版本发布，通过获取的URL下载路径更新。12345678910111213141516171819202122232425262728293031321、把打包生成的ipa包和plist文件都放到支持HTTPS的服务器上，比如七牛等。如果没有plist文件的话，可以使用下文格式，把标注位置更换就可以直接使用。&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;&lt;plist version="1.0"&gt;&lt;dict&gt; &lt;key&gt;items&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;assets&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;kind&lt;/key&gt; &lt;string&gt;software-package&lt;/string&gt; &lt;key&gt;url&lt;/key&gt; &lt;string&gt;//ipa 下载路径&lt;/string&gt; &lt;/dict&gt; &lt;/array&gt; &lt;key&gt;metadata&lt;/key&gt; &lt;dict&gt; &lt;key&gt;bundle-identifier&lt;/key&gt; &lt;string&gt;// bundle identifier &lt;/string&gt; &lt;key&gt;bundle-version&lt;/key&gt; &lt;string&gt;1.0&lt;/string&gt; &lt;key&gt;kind&lt;/key&gt; &lt;string&gt;software&lt;/string&gt; &lt;key&gt;title&lt;/key&gt; &lt;string&gt;// 标题&lt;/string&gt; &lt;/dict&gt; &lt;/dict&gt; &lt;/array&gt;&lt;/dict&gt;&lt;/plist&gt; 12、[[UIApplication sharedApplication] openURL:[NSURL URLWithString:@"itms-services://?action=download-manifest&amp;url= // plist文件下载路径 "]]]]></content>
  </entry>
  <entry>
    <title><![CDATA[iOS 适配 iPhoneXS Max，iPhoneXS，iPhoneXR]]></title>
    <url>%2F2018%2F12%2F07%2F%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[123456789//这里有个坑，如果如果直接通过安全区域判断的话,在iOS12的非刘海屏设备，top都等于20。if (@available(iOS 11.0, *)) &#123; UIEdgeInsets safeArea = [[[UIApplication sharedApplication] delegate] window].safeAreaInsets;&#125;//所以采用另一种思路if ([[UIApplication sharedApplication] statusBarFrame].size.height == 44) &#123; //iPhoneXS Max，iPhoneXS，iPhoneXR, iPhoneX //这样就都搞定啦&#125;]]></content>
  </entry>
</search>
